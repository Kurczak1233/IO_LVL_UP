{"remainingRequest":"E:\\Github\\IO_LVL_UP\\project copy\\node_modules\\babel-loader\\lib\\index.js!E:\\Github\\IO_LVL_UP\\project copy\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Github\\IO_LVL_UP\\project copy\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Github\\IO_LVL_UP\\project copy\\src\\builders\\ComponentsForBuilder\\FormFactory.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Github\\IO_LVL_UP\\project copy\\src\\builders\\ComponentsForBuilder\\FormFactory.vue","mtime":1612051650549},{"path":"E:\\Github\\IO_LVL_UP\\project copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1611593490007},{"path":"E:\\Github\\IO_LVL_UP\\project copy\\node_modules\\babel-loader\\lib\\index.js","mtime":1611593487875},{"path":"E:\\Github\\IO_LVL_UP\\project copy\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1611593490007},{"path":"E:\\Github\\IO_LVL_UP\\project copy\\node_modules\\vue-loader\\lib\\index.js","mtime":1611593512009}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiRTovR2l0aHViL0lPX0xWTF9VUC9wcm9qZWN0IGNvcHkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRTovR2l0aHViL0lPX0xWTF9VUC9wcm9qZWN0IGNvcHkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICJFOi9HaXRodWIvSU9fTFZMX1VQL3Byb2plY3QgY29weS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IHZhbGlkYXRpb25NaXhpbiB9IGZyb20gInZ1ZWxpZGF0ZSI7CmltcG9ydCBGb3JtR3JvdXAgZnJvbSAiLi9Gb3JtR3JvdXAudnVlIjsKaW1wb3J0IEZvcm1JbmxpbmVNZXNzYWdlIGZyb20gIi4vRm9ybUlubGluZU1lc3NhZ2UudnVlIjsKaW1wb3J0IEZvcm1MYWJlbCBmcm9tICIuL0Zvcm1MYWJlbC52dWUiOwp2YXIgZGVmYXVsdEZpZWxkID0gewogIGNvbXBvbmVudDogbnVsbCwKICBsYWJlbDogIiIsCiAgbmFtZTogIiIsCiAgb3B0aW9uczoge30sCiAgdmFsaWRhdGlvbjoge30KfTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJGb3JtRmFjdG9yeSIsCiAgbWl4aW5zOiBbdmFsaWRhdGlvbk1peGluXSwKICAvLyBJbmplY3RpbmcgZGVwZW5kZW5jaWVzIG1ha2VzIGl0CiAgLy8gcG9zc2libGUgb3IgcmV1c2UgdGhpcyBjb21wb25lbnQKICAvLyBmb3IgYWxsIGtpbmRzIG9mIGNvbnRlbnQgdHlwZXMuCiAgaW5qZWN0OiBbImZldGNoIiwgInBvc3QiXSwKICBjb21wb25lbnRzOiB7CiAgICBGb3JtR3JvdXA6IEZvcm1Hcm91cCwKICAgIEZvcm1JbmxpbmVNZXNzYWdlOiBGb3JtSW5saW5lTWVzc2FnZSwKICAgIEZvcm1MYWJlbDogRm9ybUxhYmVsCiAgfSwKICBwcm9wczogewogICAgZmllbGRzOiB7CiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfSwKICAgICAgdHlwZTogQXJyYXkKICAgIH0sCiAgICBpZDogewogICAgICBkZWZhdWx0OiBudWxsLAogICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YToge30sCiAgICAgIHN1Y2Nlc3M6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8vIEFwcGx5IGRlZmF1bHQgZmllbGQgY29uZmlndXJhdGlvbgogICAgLy8gdG8gbWFrZSBzdXJlIGFsbCBwcm9wZXJ0aWVzIHdlIHJlbHkKICAgIC8vIG9uIGluIHRoZSB0ZW1wbGF0ZSBkbyBleGlzdC4KICAgIGZpZWxkc1dpdGhEZWZhdWx0czogZnVuY3Rpb24gZmllbGRzV2l0aERlZmF1bHRzKCkgewogICAgICByZXR1cm4gdGhpcy5maWVsZHMubWFwKGZ1bmN0aW9uICh4KSB7CiAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgZGVmYXVsdEZpZWxkKSwgeCk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGlmICghX3RoaXMuaWQpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuZmV0Y2goX3RoaXMuaWQpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIF90aGlzLmRhdGEgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgbWV0aG9kczogewogICAgc3VibWl0OiBmdW5jdGlvbiBzdWJtaXQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIF95aWVsZCRfdGhpczIkcG9zdCwgc3VjY2VzczsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzMi4kdi4kdG91Y2goKTsKCiAgICAgICAgICAgICAgICBpZiAoIV90aGlzMi4kdi4kZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIucG9zdChfdGhpczIuZGF0YSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIF95aWVsZCRfdGhpczIkcG9zdCA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgc3VjY2VzcyA9IF95aWVsZCRfdGhpczIkcG9zdC5zdWNjZXNzOwogICAgICAgICAgICAgICAgX3RoaXMyLnN1Y2Nlc3MgPSBzdWNjZXNzOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIC8vIFRoZSB2dWVsaWRhdGUgdmFsaWRhdGlvbiBjb25maWd1cmF0aW9uIGlzCiAgLy8gYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgZm9yIHVzLgogIHZhbGlkYXRpb25zOiBmdW5jdGlvbiB2YWxpZGF0aW9ucygpIHsKICAgIHZhciBkYXRhID0gdGhpcy5maWVsZHNXaXRoRGVmYXVsdHMuZmlsdGVyKGZ1bmN0aW9uICh4KSB7CiAgICAgIHJldHVybiB4LnZhbGlkYXRpb247CiAgICB9KS5yZWR1Y2UoZnVuY3Rpb24gKHByZXYsIGZpZWxkKSB7CiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHByZXYpLCB7fSwgX2RlZmluZVByb3BlcnR5KHt9LCBmaWVsZC5uYW1lLCBmaWVsZC52YWxpZGF0aW9uKSk7CiAgICB9LCB7fSk7CiAgICByZXR1cm4gewogICAgICBkYXRhOiBkYXRhCiAgICB9OwogIH0KfTs="},{"version":3,"sources":["FormFactory.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAAA,eAAA,QAAA,WAAA;AAEA,OAAA,SAAA,MAAA,iBAAA;AACA,OAAA,iBAAA,MAAA,yBAAA;AACA,OAAA,SAAA,MAAA,iBAAA;AAEA,IAAA,YAAA,GAAA;AACA,EAAA,SAAA,EAAA,IADA;AAEA,EAAA,KAAA,EAAA,EAFA;AAGA,EAAA,IAAA,EAAA,EAHA;AAIA,EAAA,OAAA,EAAA,EAJA;AAKA,EAAA,UAAA,EAAA;AALA,CAAA;AAQA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,MAAA,EAAA,CAAA,eAAA,CAFA;AAGA;AACA;AACA;AACA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,MAAA,CANA;AAOA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,iBAAA,EAAA,iBAFA;AAGA,IAAA,SAAA,EAAA;AAHA,GAPA;AAYA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA,OADA;AAEA,MAAA,IAAA,EAAA;AAFA,KADA;AAKA,IAAA,EAAA,EAAA;AACA,MAAA,OAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA;AAFA;AALA,GAZA;AAsBA,EAAA,IAtBA,kBAsBA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GA3BA;AA4BA,EAAA,QAAA,EAAA;AACA;AACA;AACA;AACA,IAAA,kBAJA,gCAIA;AACA,aAAA,KAAA,MAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,+CAAA,YAAA,GAAA,CAAA;AAAA,OAAA,CAAA;AACA;AANA,GA5BA;AAoCA,EAAA,OApCA,qBAoCA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACA,KAAA,CAAA,EADA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAFA;;AAAA;AAEA,cAAA,KAAA,CAAA,IAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,GAxCA;AAyCA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,EAAA,CAAA,MAAA;;AADA,qBAEA,MAAA,CAAA,EAAA,CAAA,MAFA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,uBAIA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAJA;;AAAA;AAAA;AAIA,gBAAA,OAJA,sBAIA,OAJA;AAKA,gBAAA,MAAA,CAAA,OAAA,GAAA,OAAA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAPA,GAzCA;AAkDA;AACA;AACA,EAAA,WApDA,yBAoDA;AACA,QAAA,IAAA,GAAA,KAAA,kBAAA,CACA,MADA,CACA,UAAA,CAAA;AAAA,aAAA,CAAA,CAAA,UAAA;AAAA,KADA,EAEA,MAFA,CAGA,UAAA,IAAA,EAAA,KAAA;AAAA,6CACA,IADA,2BAEA,KAAA,CAAA,IAFA,EAEA,KAAA,CAAA,UAFA;AAAA,KAHA,EAOA,EAPA,CAAA;AASA,WAAA;AAAA,MAAA,IAAA,EAAA;AAAA,KAAA;AACA;AA/DA,CAAA","sourcesContent":["template>\r\n  <form class=\"form-factory\" @submit.prevent=\"submit\">\r\n    <div v-if=\"success\" class=\"form-factory-success\">Success!</div>\r\n    <template v-else>\r\n      <FormGroup v-for=\"field in fieldsWithDefaults\" :key=\"field.name\">\r\n        <FormLabel :for=\"`${_uid}-${field.name}`\">\r\n          {{ field.label }}\r\n          <template v-if=\"field.validation.required\">*</template>\r\n        </FormLabel>\r\n        <Component\r\n          v-model=\"data[field.name]\"\r\n          :is=\"field.component\"\r\n          v-bind=\"{ ...field.options.props, ...field.options.attrs }\"\r\n          :id=\"`${_uid}-${field.name}`\"\r\n          @input=\"$v.data[field.name].$touch()\"\r\n        />\r\n        <FormInlineMessage v-if=\"$v.data[field.name].$error\">Please fill in this field correctly.</FormInlineMessage>\r\n      </FormGroup>\r\n      <button>Submit</button>\r\n    </template>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport { validationMixin } from \"vuelidate\";\r\n\r\nimport FormGroup from \"./FormGroup.vue\";\r\nimport FormInlineMessage from \"./FormInlineMessage.vue\";\r\nimport FormLabel from \"./FormLabel.vue\";\r\n\r\nconst defaultField = {\r\n  component: null,\r\n  label: \"\",\r\n  name: \"\",\r\n  options: {},\r\n  validation: {}\r\n};\r\n\r\nexport default {\r\n  name: \"FormFactory\",\r\n  mixins: [validationMixin],\r\n  // Injecting dependencies makes it\r\n  // possible or reuse this component\r\n  // for all kinds of content types.\r\n  inject: [\"fetch\", \"post\"],\r\n  components: {\r\n    FormGroup,\r\n    FormInlineMessage,\r\n    FormLabel\r\n  },\r\n  props: {\r\n    fields: {\r\n      default: () => [],\r\n      type: Array\r\n    },\r\n    id: {\r\n      default: null,\r\n      type: [Number, String]\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      data: {},\r\n      success: false\r\n    };\r\n  },\r\n  computed: {\r\n    // Apply default field configuration\r\n    // to make sure all properties we rely\r\n    // on in the template do exist.\r\n    fieldsWithDefaults() {\r\n      return this.fields.map(x => ({ ...defaultField, ...x }));\r\n    }\r\n  },\r\n  async created() {\r\n    if (this.id) {\r\n      this.data = await this.fetch(this.id);\r\n    }\r\n  },\r\n  methods: {\r\n    async submit() {\r\n      this.$v.$touch();\r\n      if (this.$v.$error) return;\r\n\r\n      const { success } = await this.post(this.data);\r\n      this.success = success;\r\n    }\r\n  },\r\n  // The vuelidate validation configuration is\r\n  // automatically generated for us.\r\n  validations() {\r\n    const data = this.fieldsWithDefaults\r\n      .filter(x => x.validation)\r\n      .reduce(\r\n        (prev, field) => ({\r\n          ...prev,\r\n          [field.name]: field.validation\r\n        }),\r\n        {}\r\n      );\r\n    return { data };\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.form-factory > :not(:first-child) {\r\n  margin-top: 1em;\r\n}\r\n\r\n.form-factory-success {\r\n  color: green;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/builders/ComponentsForBuilder"}]}